version: 1.0.{build}
image: 
  #- Ubuntu1804
  - Visual Studio 2015
  #- Visual Studio 2017
  #- Visual Studio 2019 preview
platform: 
  - x86
  #- x64
#stack: Python 3.5.6

environment:
  APPVEYOR_SSH_KEY: 
    secure: /X8+umHrtl4HwHbtVmN+Cr9pJLryYyuu+lSrELTP2m70UuHR3cmdBaBGIEoVeQLMuolGRLkJ8vXnxvnqnPUUHpiA08hficDvnnXmyIZA5J7Df3eRO3TDPSh2IEUUeFoNbP1phV4chRALOJ6+9Sn9SXfkesc3swZtRaw22GPvDEBi5RF08hQevyWqtIMVeo64wira0daSt2OklbSVl5MVWgq4Iom1grPvswdmAKJmER1rlCXg6jM7i+piVlfMGPHhCTiCCYCTTg3qSHC2jeDjwA3dh+I3JOzZBzI2AbCPLx/fcVf5/hXs3cv4fDJjo+j6revKhpQzsisLEbqYVZNZ7cMuj6kRlxLX8KdAoLfVR15XXK208RXHcHViIsoJjErtTTvNly2r6gmcHXpOlQQlbSLpjRlQ54iHCoBcUE1gBjWHBiQcrkWzG24RJ/rR273TrtY/3X3/J3WxFGpZsTdhve3G1h4lxASX62SsHjir6XCdC+nQHpCl62t4099oDlsVCD4AuhvQgRGO9kkiSiEAlqHZpe7CJLBqG2rWWJI50C4=
  #APPVEYOR_BUILD_WORKER_IMAGE: visual studio 2015
  #TMP: C:\test
  my_var1: value1
  my_var2: value2
  decrypt_key:
    secure: P6iITYoWcnW0yreLikw5vA==
  test_var:
    secure: AG/L7IsG1DEXtaZSkdo+7Q==
    
  #artifact-name: archive
  #matrix:
   # - my_var3: value3
    #- my_var4: value4
    #- dummy: blank
#branches:
 # only:
  #  - test
init:
  
  #- sh: export APPVEYOR_SSH_BLOCK=true
  #- sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
  #- ls /usr/lib/mono
  #- ps: get-netnat | remove-netnat
  #- set
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  - cd src
  - cd ..
  - curl https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh
  - bash dotnet-install.sh --version 2.2.102
  #- ps: ./testuri.ps1
#  - set
  #- dir \csc.exe /s
  - C:\"Program Files (x86)"\"Microsoft Visual Studio"\2019\Preview\MSBuild\15.0\Bin\Roslyn\csc.exe /version
  #- "C:\Program Files (x86)\Microsoft Visual Studio\2019\Preview\MSBuild\15.0\Bin\Roslyn\csc.exe" /version
  
  - IF "%APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED%"=="" ECHO Variable is NOT defined
  - echo $HOME
  - echo $test_var
  #- nuget install Microsoft.VisualStudio.Azure.Fabric.MSBuild -OutputDirectory ./packages
  #- cd ~/.config/NuGet
  #- ls
  #- cat NuGet.Config
  #- cat nuget.config
  - python --version
  #- set TEMP=C:\test
  #- sh: export APPVEYOR_SSH_BLOCK=true
  #- sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
  #- set
  #- ps: .\testcolor.ps1
  #- ps: write-host $erroractionpreference
  #- echo %decrypt_key%
  #- ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
  #- cmd: appveyor-tools\secure-file -decrypt test.txt.enc -secret %decrypt_key%
  #- cmd: for /f "delims=" %A in (./lines.txt) do echo %A
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  #- mkdir src/forbiddenDir
  #- echo $APPVEYOR_BUILD_NUMBER > src/test-file.txt
  #- chmod a-xwr src/forbiddenDir
  #- ls -l src/forbiddenDir
  #- cat src/test-file.txt
  #- echo echo sleeping; > archive/before-deploy.ps1
  #- echo sleep 60; >> archive/before-deploy.ps1
  - ps: write-host 'platform' $env:PLATFORM
test_script:
  - ps: write-host "common/default test script"
  - ps: write-host 'platform' $env:PLATFORM
  - ps: Write-Host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4
build_script:
  #- 7z a src/archive.zip src/test-file.txt
  - echo "common/default build script"
#after_build:
 # - ps: ./gitClone.ps1
artifacts:
  - path: src/archive.zip
    name: archive
#deploy:
 # - provider: Environment
  #  name: ProjectA
   # site_name: $(site_to_deploy)
#matrix:
 #  exclude:
  #   - platform: x86
   #    my_var4: value4
#on_finish:
  #- sh: export APPVEYOR_SSH_BLOCK=true
  #- sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
for:
  -
     matrix:
       only:
         - configuration: release
           #my_var3: value3
     #environment:
      # my_var4: overridden-value4
    #platform: x86
     install: 
       - ps: write-host "install script"
       - ps: write-Host $env:PLATFORM
     #services:
      # - docker
     #build_script:
      # - cmd: echo "for-matrix override build script"
      #- ps: write-host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4
     on_success:
       - ps: write-host "on success script"

  -
     matrix:
       only: 
         - configuration: debug
           #my_var3: value3
     #environment:
      # my_var3: overridden-value3
   # platform: x86
     test_script:
       - ps: write-host "for-matrix override test script"
       - ps: write-host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4

