
version: 1.0.{build}
image: 
  #- Visual Studio 2015
  - Visual Studio 2017
platform: 
  - x86
  - x64
clone_folder: "c:\\pact"
environment:
  #APPVEYOR_BUILD_WORKER_IMAGE: visual studio 2015
  TMP: "c:\\temp"
  my_var1: value1
  my_var2: value2
  decrypt_key:
    secure: P6iITYoWcnW0yreLikw5vA==
  #artifact-name: archive
  #matrix:
   # - my_var3: value3
    #- my_var4: value4
    #- dummy: blank
cache: 
  - "c:\\sr"
init: 
  #- ps: get-netnat | remove-netnat

  - set
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  #- ps: .\testcolor.ps1
  #- ps: write-host $erroractionpreference
  - echo %decrypt_key%
  #- ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
  #- cmd: appveyor-tools\secure-file -decrypt test.txt.enc -secret %decrypt_key%
  #- cmd: for /f "delims=" %A in (./lines.txt) do echo %A
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - mkdir archive
  - echo %APPVEYOR_BUILD_NUMBER% > archive/test-file.txt
  #- echo echo sleeping; > archive/before-deploy.ps1
  #- echo sleep 60; >> archive/before-deploy.ps1
  - ps: write-host 'platform' $env:PLATFORM
test_script:
  - ps: write-host "common/default test script"
  - ps: write-host 'platform' $env:PLATFORM
  - ps: Write-Host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4
build_script:
  - 7z a archive.zip %APPVEYOR_BUILD_FOLDER%/archive/*
  - echo "common/default build script"
artifacts:
  - path: archive.zip
    name: archive
#deploy:
 # - provider: Environment
  #  name: ProjectA
   # site_name: $(site_to_deploy)
#matrix:
 #  exclude:
  #   - platform: x86
   #    my_var4: value4
for:
  -
     matrix:
       only:
         - configuration: release
           #my_var3: value3
     #environment:
      # my_var4: overridden-value4
    #platform: x86
     install: 
       - ps: write-host "install script"
       - ps: write-Host $env:PLATFORM
     #services:
      # - docker
     #build_script:
      # - cmd: echo "for-matrix override build script"
      #- ps: write-host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4
     on_success:
       - ps: write-host "on success script"

  -
     matrix:
       only: 
         - configuration: debug
           #my_var3: value3
     #environment:
      # my_var3: overridden-value3
   # platform: x86
     test_script:
       - ps: write-host "for-matrix override test script"
       - ps: write-host "my_var1:" $env:my_var1 "my_var2:" $env:my_var2 "my_var3:" $env:my_var3 "my_var4:" $env:my_var4

